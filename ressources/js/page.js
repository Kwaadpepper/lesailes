// Generated by CoffeeScript 1.9.3
(function() {
  $(function() {
    var animate_object_clockwise, bounce_right, bounce_right_animation, controller, menushowed, params, toggleout, update_journey_arrow;
    $.material.init();
    controller = new ScrollMagic.Controller();
    new ScrollMagic.Scene({
      duration: 100,
      offset: 0
    }).setPin('#banner_image');
    new ScrollMagic.Scene({
      triggerElement: $('#banner_logo').get()[0],
      triggerHook: 1,
      duration: "100%"
    }).setTween(TweenMax.from($("#banner_logo"), 1, {
      y: '-40%',
      autoAlpha: 0.3,
      ease: Power0.easeNone
    }));
    window.AileAscensor = $('#ascensor').ascensor({
      ascensorFloorName: ['discover', 'base', 'options', 'fare', 'details', 'contact'],
      direction: [[2, 2], [1, 3], [2, 3], [3, 3], [2, 4], [3, 4]],
      ReturnURL: true,
      Time: 500,
      WindowsOn: 1,
      ChildType: 'section',
      Easing: 'easeOutQuad',
      jump: true,
      loop: "increment",
      wheelNavigation: true,
      wheelNavigationDelay: 100,
      ready: function() {
        $('#ascensor_menu li a').removeClass('btn-primary');
        $('#ascensor_menu li a[href="' + window.location.hash + '"]').addClass('btn-primary');
        return setTimeout(function() {
          bounce_right();
          return update_journey_arrow();
        }, 1500);
      }
    });
    window.ascensorInstance = AileAscensor.ascensorInstance = AileAscensor.data('ascensor');
    AileAscensor.on("scrollStart", function(e, floor) {
      $('#ascensor_menu li a').eq(floor.from).removeClass('btn-primary');
      return $('#ascensor_menu li a').eq(floor.to).addClass('btn-primary');
    });
    AileAscensor.on("scrollEnd", function(e, floor) {
      console.log('anchor ' + ascensorInstance.anchor);
      if (ascensorInstance.anchor) {
        window.location = ascensorInstance.anchor;
        ascensorInstance.anchor = null;
      }
      return update_journey_arrow();
    });
    menushowed = false;
    $('#ascensor_menu li').click(function(e) {
      e.preventDefault();
      ascensorInstance.scrollToFloor($(this).children().attr('href').substr(1));
      return false;
    });
    toggleout = function() {
      if (menushowed) {
        $("#ascensor_menu ul").css({
          'display': 'none'
        });
        return menushowed = false;
      }
    };
    $('#ascensor_menu button').click(function(e) {
      e.preventDefault();
      $("#ascensor_menu ul").css({
        'display': 'inline-block'
      });
      menushowed = true;
      return false;
    });
    $("#ascensor_menu ul").mouseout(function() {
      return toggleout();
    });
    $(document).click(function() {
      return toggleout;
    });
    bounce_right_animation = new Bounce;
    bounce_right_animation.translate({
      from: {
        x: 0,
        y: 0
      },
      to: {
        x: 0,
        y: -($(window).height() / 2.1)
      }
    });
    bounce_right = function() {
      console.log('bounce right');
      return $("#ascensor_menu button").fadeIn('fast').delay(50).queue(function() {
        return bounce_right_animation.applyTo($("#ascensor_menu"));
      }, $("#ascensor_menu ul").delay(600).fadeOut('fast').queue(function() {}));
    };
    $('#ascensor a[href="#contact"').click(function() {
      return ascensorInstance.scrollToFloor('contact');
    });
    update_journey_arrow = function() {
      var current, map;
      current = AileAscensor.ascensorInstance.floorActive;
      map = AileAscensor.ascensorInstance.options.ascensorFloorName;
      $('#page_journey_right').show();
      $('#page_journey_left').show();
      if (current === map.length - 1) {
        $('#page_journey_right').hide();
      }
      if (current === 0) {
        return $('#page_journey_left').hide();
      }
    };
    $('.page_journey').click(function() {
      var current, map, way;
      map = AileAscensor.ascensorInstance.options.ascensorFloorName;
      current = AileAscensor.ascensorInstance.floorActive;
      way = $(this).attr('id') === 'page_journey_left' ? -1 : 1;
      if (current + way > map.length - 1 || current + way < 0) {
        return null;
      }
      return ascensorInstance.scrollToFloor(map[current + way]);
    });
    $('div#details div.container div.well button').click(function() {
      return ascensorInstance.scrollToFloor('contact');
    });
    ascensorInstance.anchor = null;
    $('div#bubbles > div').click(function() {
      ascensorInstance.scrollToFloor('details');
      return ascensorInstance.anchor = '#' + $(this).find('span').first().text();
    });
    animate_object_clockwise = function(duration, step, amplitude, angle, start_angle, easing, bounces) {
      var bounce, c, i, j, prev_x, prev_y, ref, ref1, ref2, tmp_x, tmp_y, x, y;
      bounce = new Bounce;
      duration = duration != null ? duration : 800;
      step = step != null ? step : 4;
      amplitude = amplitude != null ? amplitude : 300;
      angle = angle != null ? angle : 360;
      start_angle = start_angle != null ? start_angle : 0;
      easing = easing != null ? easing : 'bounce';
      bounces = bounces != null ? bounces : 2;
      prev_x = 0;
      prev_y = 0;
      angle = angle + start_angle;
      for (i = j = ref = start_angle, ref1 = angle, ref2 = step * 360 / 100; ref2 > 0 ? j <= ref1 : j >= ref1; i = j += ref2) {
        if (i === angle) {
          continue;
        }
        c = i * (Math.PI / 180);
        tmp_x = Math.round(Math.cos(c) * amplitude);
        tmp_y = Math.round(Math.sin(c) * amplitude);
        x = tmp_x - prev_x;
        y = tmp_y - prev_y;
        prev_x = tmp_x;
        prev_y = tmp_y;
        console.log('deg ' + i + '   X: ' + x + '(' + tmp_x + ')' + '   Y:' + y + '(' + tmp_y + ')' + '   delay: ' + ((100 * i) / (step * angle) * duration) + '  dur:' + duration);
        bounce.translate({
          from: {
            x: 0,
            y: 0
          },
          to: {
            x: x,
            y: y
          },
          delay: (100 * i) / (step * angle) * duration,
          duration: duration,
          easing: 'bounce',
          bounces: bounces
        });
      }
      return bounce;
    };
    return params = {
      dur: 400,
      step: 2,
      amp: 200,
      ang: 360,
      srt_agl: 0
    };
  });

}).call(this);
